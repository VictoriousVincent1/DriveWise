{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/lib/utils.ts"],"sourcesContent":["// Basic currency/percent formatters and loan calculations for the frontend\r\n\r\nexport function formatCurrency(value: number): string {\r\n  return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(value);\r\n}\r\n\r\nexport function formatPercent(value: number): string {\r\n  return `${value.toFixed(1)}%`;\r\n}\r\n\r\nexport function calculateMonthlyPayment(principal: number, aprPercent: number, termMonths: number): number {\r\n  const r = aprPercent / 100 / 12;\r\n  if (r === 0) return Math.round((principal / termMonths) * 100) / 100;\r\n  const payment = (principal * r) / (1 - Math.pow(1 + r, -termMonths));\r\n  return Math.round(payment * 100) / 100;\r\n}\r\n\r\nexport function calculateTotalInterest(monthlyPayment: number, termMonths: number, principal: number): number {\r\n  const totalPaid = monthlyPayment * termMonths;\r\n  return Math.max(0, Math.round((totalPaid - principal) * 100) / 100);\r\n}\r\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;;;;;;;;AAEpE,SAAS,eAAe,KAAa;IAC1C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QAAE,OAAO;QAAY,UAAU;QAAO,uBAAuB;IAAE,GAAG,MAAM,CAAC;AACjH;AAEO,SAAS,cAAc,KAAa;IACzC,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/B;AAEO,SAAS,wBAAwB,SAAiB,EAAE,UAAkB,EAAE,UAAkB;IAC/F,MAAM,IAAI,aAAa,MAAM;IAC7B,IAAI,MAAM,GAAG,OAAO,KAAK,KAAK,CAAC,AAAC,YAAY,aAAc,OAAO;IACjE,MAAM,UAAU,AAAC,YAAY,IAAK,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW;IACnE,OAAO,KAAK,KAAK,CAAC,UAAU,OAAO;AACrC;AAEO,SAAS,uBAAuB,cAAsB,EAAE,UAAkB,EAAE,SAAiB;IAClG,MAAM,YAAY,iBAAiB;IACnC,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,YAAY,SAAS,IAAI,OAAO;AACjE","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/finance-fit/AffordabilityCalculator.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport type { AffordabilityTier } from '../../types';\r\nimport { formatCurrency, formatPercent } from '../../lib/utils';\r\n\r\ninterface AffordabilityCalculatorProps {\r\n  tiers: AffordabilityTier[];\r\n  recommended: AffordabilityTier;\r\n  monthlyIncome: number;\r\n  monthlyExpenses: number;\r\n}\r\n\r\nexport default function AffordabilityCalculator({\r\n  tiers,\r\n  recommended,\r\n  monthlyIncome,\r\n  monthlyExpenses,\r\n}: AffordabilityCalculatorProps) {\r\n  const [selectedTier, setSelectedTier] = useState<AffordabilityTier>(recommended);\r\n\r\n  const disposableIncome = monthlyIncome - monthlyExpenses;\r\n  const budgetPercentage = (selectedTier.monthlyBudget / monthlyIncome) * 100;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Your Affordability Analysis</h2>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Income</p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">{formatCurrency(monthlyIncome)}</p>\r\n          </div>\r\n          <div className=\"bg-red-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Expenses</p>\r\n            <p className=\"text-2xl font-bold text-red-600\">{formatCurrency(monthlyExpenses)}</p>\r\n          </div>\r\n          <div className=\"bg-green-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Disposable Income</p>\r\n            <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(disposableIncome)}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-3\">Choose Your Comfort Level</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {tiers.map((tier) => (\r\n              <button\r\n                key={tier.tier}\r\n                onClick={() => setSelectedTier(tier)}\r\n                className={`p-4 rounded-lg border-2 transition-all ${\r\n                  selectedTier.tier === tier.tier\r\n                    ? 'border-blue-500 bg-blue-50'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                } ${recommended.tier === tier.tier ? 'ring-2 ring-green-400' : ''}`}\r\n              >\r\n                <div className=\"text-left\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h4 className=\"font-bold capitalize\">{tier.tier}</h4>\r\n                    {recommended.tier === tier.tier && (\r\n                      <span className=\"text-xs bg-green-500 text-white px-2 py-1 rounded\">\r\n                        Recommended\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-2xl font-bold text-blue-600 mb-1\">\r\n                    {formatCurrency(tier.monthlyBudget)}<span className=\"text-sm text-gray-500\">/mo</span>\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {formatPercent((tier.monthlyBudget / monthlyIncome) * 100)} of income\r\n                  </p>\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 p-6 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">\r\n            {selectedTier.tier.charAt(0).toUpperCase() + selectedTier.tier.slice(1)} Plan Details\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Monthly Budget</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.monthlyBudget)}</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                {formatPercent(budgetPercentage)} of your monthly income\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Down Payment</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.downPayment)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Maximum Loan Amount</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.maxLoanAmount)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Action</p>\r\n              <p className=\"text-xl font-bold capitalize\">{selectedTier.recommendedAction}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded border-l-4 border-blue-500\">\r\n            <p className=\"text-sm font-semibold text-gray-700 mb-1\">Why this plan?</p>\r\n            <p className=\"text-sm text-gray-600\">{selectedTier.reasoning}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}