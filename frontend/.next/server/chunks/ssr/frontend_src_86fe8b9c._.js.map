{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/trade-in/TradeInInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport type { TradeInEstimate, Vehicle } from '../../types';\r\n\r\nconst initialVehicle: Partial<Vehicle> = {\r\n  make: 'Toyota',\r\n  model: '',\r\n  year: 2020,\r\n  trim: '',\r\n  category: 'sedan',\r\n};\r\n\r\nfunction estimateTradeIn(vehicle: Partial<Vehicle>): TradeInEstimate {\r\n  // Simple mock logic: base value by year/model, adjust for condition\r\n  const base = 12000 + (vehicle.year ? (vehicle.year - 2015) * 1000 : 0);\r\n  let condition: TradeInEstimate['condition'] = 'good';\r\n  let value = base;\r\n  if (vehicle.year && vehicle.year >= 2022) {\r\n    condition = 'excellent';\r\n    value += 3000;\r\n  } else if (vehicle.year && vehicle.year <= 2016) {\r\n    condition = 'fair';\r\n    value -= 2000;\r\n  }\r\n  return {\r\n    make: vehicle.make || '',\r\n    model: vehicle.model || '',\r\n    year: vehicle.year || 2020,\r\n    mileage: 36000,\r\n    condition,\r\n    estimatedValue: value,\r\n    note: 'Estimate based on year and model. Actual value may vary.',\r\n  };\r\n}\r\n\r\nexport default function TradeInInput({ onSave }: { onSave?: (vehicle: Vehicle, estimate: TradeInEstimate) => void }) {\r\n  const [vehicle, setVehicle] = useState<Partial<Vehicle>>(initialVehicle);\r\n  const [estimate, setEstimate] = useState<TradeInEstimate | null>(null);\r\n\r\n  const handleChange = (field: keyof Vehicle, value: string | number) => {\r\n    setVehicle((v) => ({ ...v, [field]: value }));\r\n  };\r\n\r\n  const handleEstimate = () => {\r\n    const est = estimateTradeIn(vehicle);\r\n    setEstimate(est);\r\n    if (onSave && vehicle.make && vehicle.model && vehicle.year) {\r\n      onSave(vehicle as Vehicle, est);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded shadow p-4 mb-6\">\r\n      <h2 className=\"text-lg font-bold mb-2\">Your Current Toyota (Trade-In)</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Model</label>\r\n          <input type=\"text\" className=\"w-full border rounded px-2 py-1\" value={vehicle.model || ''} onChange={e => handleChange('model', e.target.value)} placeholder=\"e.g. Camry\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Year</label>\r\n          <input type=\"number\" className=\"w-full border rounded px-2 py-1\" value={vehicle.year || 2020} min={2000} max={2025} onChange={e => handleChange('year', Number(e.target.value))} />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Trim</label>\r\n          <input type=\"text\" className=\"w-full border rounded px-2 py-1\" value={vehicle.trim || ''} onChange={e => handleChange('trim', e.target.value)} placeholder=\"e.g. LE\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Category</label>\r\n          <select className=\"w-full border rounded px-2 py-1\" value={vehicle.category || 'sedan'} onChange={e => handleChange('category', e.target.value)}>\r\n            <option value=\"sedan\">Sedan</option>\r\n            <option value=\"suv\">SUV</option>\r\n            <option value=\"truck\">Truck</option>\r\n            <option value=\"minivan\">Minivan</option>\r\n            <option value=\"crossover\">Crossover</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button className=\"px-4 py-2 bg-blue-600 text-white rounded\" onClick={handleEstimate}>Estimate Trade-In Value</button>\r\n      {estimate && (\r\n        <div className=\"mt-4 p-3 bg-blue-50 rounded\">\r\n          <strong>Estimated Value:</strong> ${estimate.estimatedValue.toLocaleString()}<br />\r\n          <span className=\"text-sm text-gray-600\">Condition: {estimate.condition}</span><br />\r\n          <span className=\"text-xs text-gray-500\">{estimate.note}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/lib/utils.ts"],"sourcesContent":["// Basic currency/percent formatters and loan calculations for the frontend\r\n\r\nexport function formatCurrency(value: number): string {\r\n  return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(value);\r\n}\r\n\r\nexport function formatPercent(value: number): string {\r\n  return `${value.toFixed(1)}%`;\r\n}\r\n\r\nexport function calculateMonthlyPayment(principal: number, aprPercent: number, termMonths: number): number {\r\n  const r = aprPercent / 100 / 12;\r\n  if (r === 0) return Math.round((principal / termMonths) * 100) / 100;\r\n  const payment = (principal * r) / (1 - Math.pow(1 + r, -termMonths));\r\n  return Math.round(payment * 100) / 100;\r\n}\r\n\r\nexport function calculateTotalInterest(monthlyPayment: number, termMonths: number, principal: number): number {\r\n  const totalPaid = monthlyPayment * termMonths;\r\n  return Math.max(0, Math.round((totalPaid - principal) * 100) / 100);\r\n}\r\n\r\n// Trade-in helpers\r\nexport function estimateTradeInDepreciation(msrp: number, ageYears: number, mileage: number, condition: 'excellent' | 'good' | 'fair' | 'poor'): number {\r\n  // Simple model: base depreciation 15% first year, 10% thereafter; mileage impact; condition modifier\r\n  let value = msrp * Math.pow(0.85, Math.min(1, ageYears)) * Math.pow(0.90, Math.max(0, ageYears - 1));\r\n  // mileage: subtract $0.05 per mile over 12k/year baseline\r\n  const expectedMiles = ageYears * 12000;\r\n  const extraMiles = Math.max(0, mileage - expectedMiles);\r\n  value -= extraMiles * 0.05;\r\n  // condition modifier\r\n  const conditionFactor = { excellent: 1.05, good: 1.0, fair: 0.9, poor: 0.75 }[condition];\r\n  value *= conditionFactor;\r\n  return Math.max(1000, Math.round(value));\r\n}\r\n\r\nexport function validateVIN(vin: string): boolean {\r\n  // Basic VIN format check: 17 alphanumeric characters, excluding I, O, Q\r\n  return /^[A-HJ-NPR-Z0-9]{17}$/i.test(vin);\r\n}\r\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;;;;;;;;;;;;AAEpE,SAAS,eAAe,KAAa;IAC1C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QAAE,OAAO;QAAY,UAAU;QAAO,uBAAuB;IAAE,GAAG,MAAM,CAAC;AACjH;AAEO,SAAS,cAAc,KAAa;IACzC,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/B;AAEO,SAAS,wBAAwB,SAAiB,EAAE,UAAkB,EAAE,UAAkB;IAC/F,MAAM,IAAI,aAAa,MAAM;IAC7B,IAAI,MAAM,GAAG,OAAO,KAAK,KAAK,CAAC,AAAC,YAAY,aAAc,OAAO;IACjE,MAAM,UAAU,AAAC,YAAY,IAAK,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW;IACnE,OAAO,KAAK,KAAK,CAAC,UAAU,OAAO;AACrC;AAEO,SAAS,uBAAuB,cAAsB,EAAE,UAAkB,EAAE,SAAiB;IAClG,MAAM,YAAY,iBAAiB;IACnC,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,YAAY,SAAS,IAAI,OAAO;AACjE;AAGO,SAAS,4BAA4B,IAAY,EAAE,QAAgB,EAAE,OAAe,EAAE,SAAiD;IAC5I,qGAAqG;IACrG,IAAI,QAAQ,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,aAAa,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,WAAW;IACjG,0DAA0D;IAC1D,MAAM,gBAAgB,WAAW;IACjC,MAAM,aAAa,KAAK,GAAG,CAAC,GAAG,UAAU;IACzC,SAAS,aAAa;IACtB,qBAAqB;IACrB,MAAM,kBAAkB;QAAE,WAAW;QAAM,MAAM;QAAK,MAAM;QAAK,MAAM;IAAK,CAAC,CAAC,UAAU;IACxF,SAAS;IACT,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,KAAK,CAAC;AACnC;AAEO,SAAS,YAAY,GAAW;IACrC,wEAAwE;IACxE,OAAO,yBAAyB,IAAI,CAAC;AACvC","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/trade-in/TradeInBestDeal.tsx"],"sourcesContent":["import React from 'react';\r\nimport type { TradeInEstimate } from '../../types';\r\nimport { formatCurrency } from '../../lib/utils';\r\n\r\ninterface Props {\r\n  tradeIn: TradeInEstimate | null;\r\n  downPayment: number;\r\n  vehiclePrice: number;\r\n  loanTerm: number;\r\n  apr: number;\r\n}\r\n\r\nexport default function TradeInBestDeal({ tradeIn, downPayment, vehiclePrice, loanTerm, apr }: Props) {\r\n  if (!tradeIn) return null;\r\n  // Factor trade-in into down payment\r\n  const totalDown = downPayment + tradeIn.estimatedValue;\r\n  const loanAmount = vehiclePrice - totalDown;\r\n  const monthlyPayment = loanAmount > 0 ? Math.round(((loanAmount * (apr / 100 / 12)) / (1 - Math.pow(1 + apr / 100 / 12, -loanTerm))) * 100) / 100 : 0;\r\n  const totalCost = monthlyPayment * loanTerm + totalDown;\r\n\r\n  return (\r\n    <div className=\"bg-green-50 border-l-4 border-green-600 p-4 rounded mt-4\">\r\n      <h3 className=\"text-lg font-bold mb-2\">Best Deal Scenario</h3>\r\n      <div className=\"space-y-2\">\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Trade-In Value</span>\r\n          <span className=\"ml-2 font-bold text-green-700\">{formatCurrency(tradeIn.estimatedValue)}</span>\r\n        </div>\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Total Down Payment (Trade-In + Cash)</span>\r\n          <span className=\"ml-2 font-bold\">{formatCurrency(totalDown)}</span>\r\n        </div>\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Loan Amount</span>\r\n          <span className=\"ml-2 font-bold\">{formatCurrency(loanAmount)}</span>\r\n        </div>\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Monthly Payment</span>\r\n          <span className=\"ml-2 font-bold text-blue-600\">{formatCurrency(monthlyPayment)}</span>\r\n        </div>\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Total Cost (All-In)</span>\r\n          <span className=\"ml-2 font-bold\">{formatCurrency(totalCost)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAUe,SAAS,gBAAgB,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,EAAS;IAClG,IAAI,CAAC,SAAS,OAAO;IACrB,oCAAoC;IACpC,MAAM,YAAY,cAAc,QAAQ,cAAc;IACtD,MAAM,aAAa,eAAe;IAClC,MAAM,iBAAiB,aAAa,IAAI,KAAK,KAAK,CAAC,AAAE,aAAa,CAAC,MAAM,MAAM,EAAE,IAAK,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,MAAM,MAAM,IAAI,CAAC,SAAS,IAAK,OAAO,MAAM;IACpJ,MAAM,YAAY,iBAAiB,WAAW;IAE9C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAAiC,IAAA,iJAAc,EAAC,QAAQ,cAAc;;;;;;;;;;;;kCAExF,8OAAC;;0CACC,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAAkB,IAAA,iJAAc,EAAC;;;;;;;;;;;;kCAEnD,8OAAC;;0CACC,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAAkB,IAAA,iJAAc,EAAC;;;;;;;;;;;;kCAEnD,8OAAC;;0CACC,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAAgC,IAAA,iJAAc,EAAC;;;;;;;;;;;;kCAEjE,8OAAC;;0CACC,8OAAC;gCAAK,WAAU;0CAAwB;;;;;;0CACxC,8OAAC;gCAAK,WAAU;0CAAkB,IAAA,iJAAc,EAAC;;;;;;;;;;;;;;;;;;;;;;;;AAK3D","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/finance-fit/AffordabilityCalculator.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport type { AffordabilityTier } from '../../types';\r\nimport { formatCurrency, formatPercent } from '../../lib/utils';\r\n\r\ninterface AffordabilityCalculatorProps {\r\n  tiers: AffordabilityTier[];\r\n  recommended: AffordabilityTier;\r\n  monthlyIncome: number;\r\n  monthlyExpenses: number;\r\n}\r\n\r\nexport default function AffordabilityCalculator({\r\n  tiers,\r\n  recommended,\r\n  monthlyIncome,\r\n  monthlyExpenses,\r\n}: AffordabilityCalculatorProps) {\r\n  const [selectedTier, setSelectedTier] = useState<AffordabilityTier>(recommended);\r\n\r\n  const disposableIncome = monthlyIncome - monthlyExpenses;\r\n  const budgetPercentage = (selectedTier.monthlyBudget / monthlyIncome) * 100;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Your Affordability Analysis</h2>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Income</p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">{formatCurrency(monthlyIncome)}</p>\r\n          </div>\r\n          <div className=\"bg-red-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Expenses</p>\r\n            <p className=\"text-2xl font-bold text-red-600\">{formatCurrency(monthlyExpenses)}</p>\r\n          </div>\r\n          <div className=\"bg-green-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Disposable Income</p>\r\n            <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(disposableIncome)}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-3\">Choose Your Comfort Level</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {tiers.map((tier) => (\r\n              <button\r\n                key={tier.tier}\r\n                onClick={() => setSelectedTier(tier)}\r\n                className={`p-4 rounded-lg border-2 transition-all ${\r\n                  selectedTier.tier === tier.tier\r\n                    ? 'border-blue-500 bg-blue-50'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                } ${recommended.tier === tier.tier ? 'ring-2 ring-green-400' : ''}`}\r\n              >\r\n                <div className=\"text-left\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h4 className=\"font-bold capitalize\">{tier.tier}</h4>\r\n                    {recommended.tier === tier.tier && (\r\n                      <span className=\"text-xs bg-green-500 text-white px-2 py-1 rounded\">\r\n                        Recommended\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-2xl font-bold text-blue-600 mb-1\">\r\n                    {formatCurrency(tier.monthlyBudget)}<span className=\"text-sm text-gray-500\">/mo</span>\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {formatPercent((tier.monthlyBudget / monthlyIncome) * 100)} of income\r\n                  </p>\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 p-6 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">\r\n            {selectedTier.tier.charAt(0).toUpperCase() + selectedTier.tier.slice(1)} Plan Details\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Monthly Budget</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.monthlyBudget)}</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                {formatPercent(budgetPercentage)} of your monthly income\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Down Payment</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.downPayment)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Maximum Loan Amount</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.maxLoanAmount)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Action</p>\r\n              <p className=\"text-xl font-bold capitalize\">{selectedTier.recommendedAction}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded border-l-4 border-blue-500\">\r\n            <p className=\"text-sm font-semibold text-gray-700 mb-1\">Why this plan?</p>\r\n            <p className=\"text-sm text-gray-600\">{selectedTier.reasoning}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/lib/mockData/banking.ts"],"sourcesContent":["import type { AffordabilityTier, BankingData } from '../../types';\r\n\r\n// Mocked banking + affordability calculation for the frontend demo\r\nexport async function calculateAffordability(accountId: string, creditScore: number): Promise<{\r\n  tiers: AffordabilityTier[];\r\n  recommended: AffordabilityTier;\r\n  bankingData: BankingData;\r\n}> {\r\n  // Pretend to fetch over network\r\n  await new Promise((r) => setTimeout(r, 150));\r\n\r\n  // Simple mocked banking data\r\n  const bankingData: BankingData = {\r\n    averageMonthlyIncome: 6500,\r\n    averageMonthlyExpenses: 3200,\r\n  };\r\n\r\n  const disposable = Math.max(0, bankingData.averageMonthlyIncome - bankingData.averageMonthlyExpenses);\r\n\r\n  const base = {\r\n    conservative: 0.1,\r\n    balanced: 0.15,\r\n    stretch: 0.2,\r\n  } as const;\r\n\r\n  // Adjust slightly by credit score (higher score -> slightly higher comfortable budget)\r\n  const scoreAdj = Math.min(0.03, Math.max(-0.02, (creditScore - 700) / 10000));\r\n\r\n  const makeTier = (name: keyof typeof base): AffordabilityTier => {\r\n    const monthlyBudget = Math.round(bankingData.averageMonthlyIncome * (base[name] + scoreAdj));\r\n    const downPayment = Math.round(monthlyBudget * 6); // suggest ~6 months of the budget\r\n    const maxLoanAmount = Math.round(monthlyBudget * 60); // assume 60mo baseline\r\n    const recommendedAction = name === 'conservative' ? 'save' : name === 'balanced' ? 'buy' : 'consider';\r\n    const reasoning =\r\n      name === 'conservative'\r\n        ? 'Keeps plenty of buffer for savings and unexpected expenses.'\r\n        : name === 'balanced'\r\n        ? 'Balances comfort and speed to ownership with manageable payments.'\r\n        : 'Higher payment for a shorter path; ensure emergency fund coverage.';\r\n    return { tier: name, monthlyBudget, downPayment, maxLoanAmount, recommendedAction, reasoning };\r\n  };\r\n\r\n  const tiers = [makeTier('conservative'), makeTier('balanced'), makeTier('stretch')];\r\n  const recommended = tiers[1];\r\n\r\n  return { tiers, recommended, bankingData };\r\n}\r\n"],"names":[],"mappings":";;;;AAGO,eAAe,uBAAuB,SAAiB,EAAE,WAAmB;IAKjF,gCAAgC;IAChC,MAAM,IAAI,QAAQ,CAAC,IAAM,WAAW,GAAG;IAEvC,6BAA6B;IAC7B,MAAM,cAA2B;QAC/B,sBAAsB;QACtB,wBAAwB;IAC1B;IAEA,MAAM,aAAa,KAAK,GAAG,CAAC,GAAG,YAAY,oBAAoB,GAAG,YAAY,sBAAsB;IAEpG,MAAM,OAAO;QACX,cAAc;QACd,UAAU;QACV,SAAS;IACX;IAEA,uFAAuF;IACvF,MAAM,WAAW,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI;IAEtE,MAAM,WAAW,CAAC;QAChB,MAAM,gBAAgB,KAAK,KAAK,CAAC,YAAY,oBAAoB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ;QAC1F,MAAM,cAAc,KAAK,KAAK,CAAC,gBAAgB,IAAI,kCAAkC;QACrF,MAAM,gBAAgB,KAAK,KAAK,CAAC,gBAAgB,KAAK,uBAAuB;QAC7E,MAAM,oBAAoB,SAAS,iBAAiB,SAAS,SAAS,aAAa,QAAQ;QAC3F,MAAM,YACJ,SAAS,iBACL,gEACA,SAAS,aACT,sEACA;QACN,OAAO;YAAE,MAAM;YAAM;YAAe;YAAa;YAAe;YAAmB;QAAU;IAC/F;IAEA,MAAM,QAAQ;QAAC,SAAS;QAAiB,SAAS;QAAa,SAAS;KAAW;IACnF,MAAM,cAAc,KAAK,CAAC,EAAE;IAE5B,OAAO;QAAE;QAAO;QAAa;IAAY;AAC3C","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/app/finance-fit/page.tsx"],"sourcesContent":["\r\n'use client';\r\nimport TradeInInput from '../../components/trade-in/TradeInInput';\r\nimport TradeInBestDeal from '../../components/trade-in/TradeInBestDeal';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport AffordabilityCalculator from '../../components/finance-fit/AffordabilityCalculator';\r\nimport { calculateMonthlyPayment, calculateTotalInterest, formatCurrency } from '../../lib/utils';\r\nimport { calculateAffordability } from '../../lib/mockData/banking';\r\nimport type { AffordabilityTier, BankingData } from '../../types';\r\n\r\nexport default function FinanceFitPage() {\r\n  // Trade-in state\r\n  const [tradeIn, setTradeIn] = useState<import('../../types').TradeInEstimate | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [affordabilityData, setAffordabilityData] = useState<{\r\n    tiers: AffordabilityTier[];\r\n    recommended: AffordabilityTier;\r\n    bankingData: BankingData;\r\n  } | null>(null);\r\n\r\n  // Scenario tool states\r\n  const [vehiclePrice, setVehiclePrice] = useState(30000);\r\n  const [downPayment, setDownPayment] = useState(6000);\r\n  const [creditScore, setCreditScore] = useState(720);\r\n  const [termMonths, setTermMonths] = useState(60);\r\n  const [extraPayment, setExtraPayment] = useState(0);\r\n\r\n  // APR logic based on credit score\r\n  const getAPR = (score: number) => {\r\n    if (score >= 750) return 4.5;\r\n    if (score >= 700) return 6.5;\r\n    if (score >= 650) return 9.0;\r\n    return 13.0;\r\n  };\r\n  const apr = getAPR(creditScore);\r\n\r\n  // Loan calculations\r\n  const loanAmount = vehiclePrice - downPayment;\r\n  const monthlyPayment = calculateMonthlyPayment(loanAmount, apr, termMonths) + extraPayment;\r\n  const totalInterest = calculateTotalInterest(monthlyPayment, termMonths, loanAmount);\r\n  const totalCost = monthlyPayment * termMonths;\r\n  const savingsWithExtra = extraPayment > 0 ? Math.round(extraPayment * termMonths) : 0;\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching user data\r\n    const fetchData = async () => {\r\n      const data = await calculateAffordability('acc_123456789', creditScore);\r\n      setAffordabilityData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [creditScore]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading your financial profile...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-4xl font-bold mb-4\">💰 Finance Fit</h1>\r\n        <p className=\"text-lg text-gray-600\">\r\n          Discover what you can afford based on your real financial data.<br />\r\n          Powered by Capital One's Nessie API (or mock data).\r\n        </p>\r\n      </div>\r\n\r\n      {/* Trade-In Section */}\r\n      <div className=\"mb-8\">\r\n        <TradeInInput onSave={(vehicle, estimate) => setTradeIn(estimate)} />\r\n      </div>\r\n      {/* Best Deal Scenario factoring trade-in */}\r\n      <TradeInBestDeal\r\n        tradeIn={tradeIn}\r\n        downPayment={downPayment}\r\n        vehiclePrice={vehiclePrice}\r\n        loanTerm={termMonths}\r\n        apr={apr}\r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n        {/* Scenario Tools */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h2 className=\"text-2xl font-bold mb-6\">Scenario Tools</h2>\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Vehicle Price: {formatCurrency(vehiclePrice)}</label>\r\n              <input type=\"range\" min=\"15000\" max=\"80000\" step=\"1000\" value={vehiclePrice} onChange={e => setVehiclePrice(Number(e.target.value))} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\"><span>$15K</span><span>$80K</span></div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Down Payment: {formatCurrency(downPayment)}</label>\r\n              <input type=\"range\" min=\"0\" max={vehiclePrice * 0.5} step=\"500\" value={downPayment} onChange={e => setDownPayment(Number(e.target.value))} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\"><span>$0</span><span>{formatCurrency(vehiclePrice * 0.5)}</span></div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Credit Score: {creditScore}</label>\r\n              <input type=\"range\" min=\"500\" max=\"850\" step=\"10\" value={creditScore} onChange={e => setCreditScore(Number(e.target.value))} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\"><span>500</span><span>850</span></div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Loan Term: {termMonths} months ({(termMonths / 12).toFixed(1)} years)</label>\r\n              <input type=\"range\" min=\"24\" max=\"84\" step=\"12\" value={termMonths} onChange={e => setTermMonths(Number(e.target.value))} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\"><span>2 yrs</span><span>7 yrs</span></div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Extra Monthly Payment: {formatCurrency(extraPayment)}</label>\r\n              <input type=\"range\" min=\"0\" max=\"1000\" step=\"50\" value={extraPayment} onChange={e => setExtraPayment(Number(e.target.value))} className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\" />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\"><span>$0</span><span>$1,000</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results & Impact */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h2 className=\"text-2xl font-bold mb-6\">Long-Term Cost Impact</h2>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <span className=\"text-sm text-gray-600\">Monthly Payment</span>\r\n              <div className=\"text-2xl font-bold text-blue-600\">{formatCurrency(monthlyPayment)}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-sm text-gray-600\">Total Interest Paid</span>\r\n              <div className=\"text-xl font-bold text-red-600\">{formatCurrency(totalInterest)}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-sm text-gray-600\">Total Cost (Loan + Interest)</span>\r\n              <div className=\"text-xl font-bold\">{formatCurrency(totalCost)}</div>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-sm text-gray-600\">Savings from Extra Payments</span>\r\n              <div className=\"text-xl font-bold text-green-600\">{formatCurrency(savingsWithExtra)}</div>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <span className=\"text-sm text-gray-600\">APR (based on credit score)</span>\r\n              <div className=\"text-lg font-bold\">{apr}%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Affordability Calculator (still available) */}\r\n      <div className=\"mt-12\">\r\n        {affordabilityData && (\r\n          <AffordabilityCalculator\r\n            tiers={affordabilityData.tiers}\r\n            recommended={affordabilityData.recommended}\r\n            monthlyIncome={affordabilityData.bankingData.averageMonthlyIncome}\r\n            monthlyExpenses={affordabilityData.bankingData.averageMonthlyExpenses}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}