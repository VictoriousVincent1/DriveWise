{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/lib/utils.ts"],"sourcesContent":["// Basic currency/percent formatters and loan calculations for the frontend\r\n\r\nexport function formatCurrency(value: number): string {\r\n  return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', maximumFractionDigits: 0 }).format(value);\r\n}\r\n\r\nexport function formatPercent(value: number): string {\r\n  return `${value.toFixed(1)}%`;\r\n}\r\n\r\nexport function calculateMonthlyPayment(principal: number, aprPercent: number, termMonths: number): number {\r\n  const r = aprPercent / 100 / 12;\r\n  if (r === 0) return Math.round((principal / termMonths) * 100) / 100;\r\n  const payment = (principal * r) / (1 - Math.pow(1 + r, -termMonths));\r\n  return Math.round(payment * 100) / 100;\r\n}\r\n\r\nexport function calculateTotalInterest(monthlyPayment: number, termMonths: number, principal: number): number {\r\n  const totalPaid = monthlyPayment * termMonths;\r\n  return Math.max(0, Math.round((totalPaid - principal) * 100) / 100);\r\n}\r\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;;;;;;;;AAEpE,SAAS,eAAe,KAAa;IAC1C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QAAE,OAAO;QAAY,UAAU;QAAO,uBAAuB;IAAE,GAAG,MAAM,CAAC;AACjH;AAEO,SAAS,cAAc,KAAa;IACzC,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/B;AAEO,SAAS,wBAAwB,SAAiB,EAAE,UAAkB,EAAE,UAAkB;IAC/F,MAAM,IAAI,aAAa,MAAM;IAC7B,IAAI,MAAM,GAAG,OAAO,KAAK,KAAK,CAAC,AAAC,YAAY,aAAc,OAAO;IACjE,MAAM,UAAU,AAAC,YAAY,IAAK,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW;IACnE,OAAO,KAAK,KAAK,CAAC,UAAU,OAAO;AACrC;AAEO,SAAS,uBAAuB,cAAsB,EAAE,UAAkB,EAAE,SAAiB;IAClG,MAAM,YAAY,iBAAiB;IACnC,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,YAAY,SAAS,IAAI,OAAO;AACjE","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/finance-fit/AffordabilityCalculator.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport type { AffordabilityTier } from '../../types';\r\nimport { formatCurrency, formatPercent } from '../../lib/utils';\r\n\r\ninterface AffordabilityCalculatorProps {\r\n  tiers: AffordabilityTier[];\r\n  recommended: AffordabilityTier;\r\n  monthlyIncome: number;\r\n  monthlyExpenses: number;\r\n}\r\n\r\nexport default function AffordabilityCalculator({\r\n  tiers,\r\n  recommended,\r\n  monthlyIncome,\r\n  monthlyExpenses,\r\n}: AffordabilityCalculatorProps) {\r\n  const [selectedTier, setSelectedTier] = useState<AffordabilityTier>(recommended);\r\n\r\n  const disposableIncome = monthlyIncome - monthlyExpenses;\r\n  const budgetPercentage = (selectedTier.monthlyBudget / monthlyIncome) * 100;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Your Affordability Analysis</h2>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Income</p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">{formatCurrency(monthlyIncome)}</p>\r\n          </div>\r\n          <div className=\"bg-red-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Monthly Expenses</p>\r\n            <p className=\"text-2xl font-bold text-red-600\">{formatCurrency(monthlyExpenses)}</p>\r\n          </div>\r\n          <div className=\"bg-green-50 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-gray-600\">Disposable Income</p>\r\n            <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(disposableIncome)}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-lg font-semibold mb-3\">Choose Your Comfort Level</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {tiers.map((tier) => (\r\n              <button\r\n                key={tier.tier}\r\n                onClick={() => setSelectedTier(tier)}\r\n                className={`p-4 rounded-lg border-2 transition-all ${\r\n                  selectedTier.tier === tier.tier\r\n                    ? 'border-blue-500 bg-blue-50'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                } ${recommended.tier === tier.tier ? 'ring-2 ring-green-400' : ''}`}\r\n              >\r\n                <div className=\"text-left\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h4 className=\"font-bold capitalize\">{tier.tier}</h4>\r\n                    {recommended.tier === tier.tier && (\r\n                      <span className=\"text-xs bg-green-500 text-white px-2 py-1 rounded\">\r\n                        Recommended\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-2xl font-bold text-blue-600 mb-1\">\r\n                    {formatCurrency(tier.monthlyBudget)}<span className=\"text-sm text-gray-500\">/mo</span>\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {formatPercent((tier.monthlyBudget / monthlyIncome) * 100)} of income\r\n                  </p>\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 p-6 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">\r\n            {selectedTier.tier.charAt(0).toUpperCase() + selectedTier.tier.slice(1)} Plan Details\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Monthly Budget</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.monthlyBudget)}</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                {formatPercent(budgetPercentage)} of your monthly income\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Down Payment</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.downPayment)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Maximum Loan Amount</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(selectedTier.maxLoanAmount)}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">Recommended Action</p>\r\n              <p className=\"text-xl font-bold capitalize\">{selectedTier.recommendedAction}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded border-l-4 border-blue-500\">\r\n            <p className=\"text-sm font-semibold text-gray-700 mb-1\">Why this plan?</p>\r\n            <p className=\"text-sm text-gray-600\">{selectedTier.reasoning}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/components/finance-fit/PaymentSimulator.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { calculateMonthlyPayment, formatCurrency, formatPercent, calculateTotalInterest } from '../../lib/utils';\r\n\r\ninterface PaymentSimulatorProps {\r\n  defaultPrice?: number;\r\n  defaultCreditScore?: number;\r\n}\r\n\r\nexport default function PaymentSimulator({\r\n  defaultPrice = 30000,\r\n  defaultCreditScore = 700,\r\n}: PaymentSimulatorProps) {\r\n  const [vehiclePrice, setVehiclePrice] = useState(defaultPrice);\r\n  const [downPayment, setDownPayment] = useState(Math.round(defaultPrice * 0.2));\r\n  const [creditScore, setCreditScore] = useState(defaultCreditScore);\r\n  const [termMonths, setTermMonths] = useState(60);\r\n  const [apr, setAPR] = useState(6.5);\r\n\r\n  const loanAmount = vehiclePrice - downPayment;\r\n  const monthlyPayment = calculateMonthlyPayment(loanAmount, apr, termMonths);\r\n  const totalInterest = calculateTotalInterest(monthlyPayment, termMonths, loanAmount);\r\n  const totalCost = monthlyPayment * termMonths;\r\n\r\n  const handleCreditScoreChange = (score: number) => {\r\n    setCreditScore(score);\r\n    // Auto-adjust APR based on credit score\r\n    if (score >= 750) setAPR(4.5);\r\n    else if (score >= 700) setAPR(6.5);\r\n    else if (score >= 650) setAPR(9.0);\r\n    else setAPR(13.0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Interactive Payment Simulator</h2>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Controls */}\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Vehicle Price: {formatCurrency(vehiclePrice)}\r\n            </label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"15000\"\r\n              max=\"80000\"\r\n              step=\"1000\"\r\n              value={vehiclePrice}\r\n              onChange={(e) => setVehiclePrice(Number(e.target.value))}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n            />\r\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n              <span>$15K</span>\r\n              <span>$80K</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Down Payment: {formatCurrency(downPayment)} ({formatPercent((downPayment / vehiclePrice) * 100)})\r\n            </label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={vehiclePrice * 0.5}\r\n              step=\"500\"\r\n              value={downPayment}\r\n              onChange={(e) => setDownPayment(Number(e.target.value))}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n            />\r\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n              <span>$0</span>\r\n              <span>{formatCurrency(vehiclePrice * 0.5)}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Credit Score: {creditScore}\r\n            </label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"500\"\r\n              max=\"850\"\r\n              step=\"10\"\r\n              value={creditScore}\r\n              onChange={(e) => handleCreditScoreChange(Number(e.target.value))}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n            />\r\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n              <span>500</span>\r\n              <span>850</span>\r\n            </div>\r\n            <p className=\"text-xs text-gray-600 mt-2\">\r\n              {creditScore >= 750 && '✨ Excellent - Best rates available'}\r\n              {creditScore >= 700 && creditScore < 750 && '👍 Good - Competitive rates'}\r\n              {creditScore >= 650 && creditScore < 700 && '⚠️ Fair - Higher rates'}\r\n              {creditScore < 650 && '❗ Poor - Limited options'}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              Loan Term: {termMonths} months ({termMonths / 12} years)\r\n            </label>\r\n            <div className=\"flex gap-2\">\r\n              {[36, 48, 60, 72, 84].map((term) => (\r\n                <button\r\n                  key={term}\r\n                  onClick={() => setTermMonths(term)}\r\n                  className={`flex-1 py-2 px-3 rounded-lg text-sm font-medium transition-colors ${\r\n                    termMonths === term\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                  }`}\r\n                >\r\n                  {term}mo\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">\r\n              APR: {formatPercent(apr)}\r\n            </label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              step=\"0.1\"\r\n              value={apr}\r\n              onChange={(e) => setAPR(Number(e.target.value))}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n            />\r\n            <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n              <span>2%</span>\r\n              <span>20%</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"bg-gradient-to-br from-blue-500 to-blue-600 text-white p-6 rounded-lg\">\r\n            <p className=\"text-sm opacity-90 mb-1\">Your Monthly Payment</p>\r\n            <p className=\"text-4xl font-bold\">{formatCurrency(monthlyPayment)}</p>\r\n            <p className=\"text-sm opacity-75 mt-2\">\r\n              Based on {formatCurrency(loanAmount)} financed\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <p className=\"text-xs text-gray-600 mb-1\">Total Loan Amount</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(loanAmount)}</p>\r\n            </div>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <p className=\"text-xs text-gray-600 mb-1\">Total Interest</p>\r\n              <p className=\"text-xl font-bold text-red-600\">{formatCurrency(totalInterest)}</p>\r\n            </div>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <p className=\"text-xs text-gray-600 mb-1\">Total Cost</p>\r\n              <p className=\"text-xl font-bold\">{formatCurrency(totalCost)}</p>\r\n            </div>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <p className=\"text-xs text-gray-600 mb-1\">Down Payment</p>\r\n              <p className=\"text-xl font-bold text-green-600\">{formatCurrency(downPayment)}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 border border-yellow-200 p-4 rounded-lg\">\r\n            <p className=\"text-sm font-semibold text-yellow-800 mb-2\">💡 Money-Saving Tip</p>\r\n            <p className=\"text-sm text-yellow-700\">\r\n              Paying an extra ${Math.round(monthlyPayment * 0.1)}/month could save you approximately{' '}\r\n              {formatCurrency(totalInterest * 0.15)} in interest and shorten your loan by{' '}\r\n              {Math.round(termMonths * 0.15)} months!\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-blue-50 border border-blue-200 p-4 rounded-lg\">\r\n            <p className=\"text-sm font-semibold text-blue-800 mb-2\">📊 Credit Score Impact</p>\r\n            <p className=\"text-sm text-blue-700\">\r\n              Improving your credit score to 750+ could lower your APR to 4.5%, saving you{' '}\r\n              {formatCurrency(\r\n                calculateMonthlyPayment(loanAmount, apr, termMonths) -\r\n                  calculateMonthlyPayment(loanAmount, 4.5, termMonths)\r\n              )}\r\n              /month!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 995, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/lib/mockData/banking.ts"],"sourcesContent":["import type { AffordabilityTier, BankingData } from '../../types';\r\n\r\n// Mocked banking + affordability calculation for the frontend demo\r\nexport async function calculateAffordability(accountId: string, creditScore: number): Promise<{\r\n  tiers: AffordabilityTier[];\r\n  recommended: AffordabilityTier;\r\n  bankingData: BankingData;\r\n}> {\r\n  // Pretend to fetch over network\r\n  await new Promise((r) => setTimeout(r, 150));\r\n\r\n  // Simple mocked banking data\r\n  const bankingData: BankingData = {\r\n    averageMonthlyIncome: 6500,\r\n    averageMonthlyExpenses: 3200,\r\n  };\r\n\r\n  const disposable = Math.max(0, bankingData.averageMonthlyIncome - bankingData.averageMonthlyExpenses);\r\n\r\n  const base = {\r\n    conservative: 0.1,\r\n    balanced: 0.15,\r\n    stretch: 0.2,\r\n  } as const;\r\n\r\n  // Adjust slightly by credit score (higher score -> slightly higher comfortable budget)\r\n  const scoreAdj = Math.min(0.03, Math.max(-0.02, (creditScore - 700) / 10000));\r\n\r\n  const makeTier = (name: keyof typeof base): AffordabilityTier => {\r\n    const monthlyBudget = Math.round(bankingData.averageMonthlyIncome * (base[name] + scoreAdj));\r\n    const downPayment = Math.round(monthlyBudget * 6); // suggest ~6 months of the budget\r\n    const maxLoanAmount = Math.round(monthlyBudget * 60); // assume 60mo baseline\r\n    const recommendedAction = name === 'conservative' ? 'save' : name === 'balanced' ? 'buy' : 'consider';\r\n    const reasoning =\r\n      name === 'conservative'\r\n        ? 'Keeps plenty of buffer for savings and unexpected expenses.'\r\n        : name === 'balanced'\r\n        ? 'Balances comfort and speed to ownership with manageable payments.'\r\n        : 'Higher payment for a shorter path; ensure emergency fund coverage.';\r\n    return { tier: name, monthlyBudget, downPayment, maxLoanAmount, recommendedAction, reasoning };\r\n  };\r\n\r\n  const tiers = [makeTier('conservative'), makeTier('balanced'), makeTier('stretch')];\r\n  const recommended = tiers[1];\r\n\r\n  return { tiers, recommended, bankingData };\r\n}\r\n"],"names":[],"mappings":";;;;AAGO,eAAe,uBAAuB,SAAiB,EAAE,WAAmB;IAKjF,gCAAgC;IAChC,MAAM,IAAI,QAAQ,CAAC,IAAM,WAAW,GAAG;IAEvC,6BAA6B;IAC7B,MAAM,cAA2B;QAC/B,sBAAsB;QACtB,wBAAwB;IAC1B;IAEA,MAAM,aAAa,KAAK,GAAG,CAAC,GAAG,YAAY,oBAAoB,GAAG,YAAY,sBAAsB;IAEpG,MAAM,OAAO;QACX,cAAc;QACd,UAAU;QACV,SAAS;IACX;IAEA,uFAAuF;IACvF,MAAM,WAAW,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI;IAEtE,MAAM,WAAW,CAAC;QAChB,MAAM,gBAAgB,KAAK,KAAK,CAAC,YAAY,oBAAoB,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ;QAC1F,MAAM,cAAc,KAAK,KAAK,CAAC,gBAAgB,IAAI,kCAAkC;QACrF,MAAM,gBAAgB,KAAK,KAAK,CAAC,gBAAgB,KAAK,uBAAuB;QAC7E,MAAM,oBAAoB,SAAS,iBAAiB,SAAS,SAAS,aAAa,QAAQ;QAC3F,MAAM,YACJ,SAAS,iBACL,gEACA,SAAS,aACT,sEACA;QACN,OAAO;YAAE,MAAM;YAAM;YAAe;YAAa;YAAe;YAAmB;QAAU;IAC/F;IAEA,MAAM,QAAQ;QAAC,SAAS;QAAiB,SAAS;QAAa,SAAS;KAAW;IACnF,MAAM,cAAc,KAAK,CAAC,EAAE;IAE5B,OAAO;QAAE;QAAO;QAAa;IAAY;AAC3C","debugId":null}},
    {"offset": {"line": 1046, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/frontend/src/app/finance-fit/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport AffordabilityCalculator from '../../components/finance-fit/AffordabilityCalculator';\r\nimport PaymentSimulator from '../../components/finance-fit/PaymentSimulator';\r\nimport { calculateAffordability } from '../../lib/mockData/banking';\r\nimport type { AffordabilityTier, BankingData } from '../../types';\r\n\r\nexport default function FinanceFitPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [affordabilityData, setAffordabilityData] = useState<{\r\n    tiers: AffordabilityTier[];\r\n    recommended: AffordabilityTier;\r\n    bankingData: BankingData;\r\n  } | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching user data\r\n    const fetchData = async () => {\r\n      const data = await calculateAffordability('acc_123456789', 720);\r\n      setAffordabilityData(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading your financial profile...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-4xl font-bold mb-4\">💰 Finance Fit</h1>\r\n        <p className=\"text-lg text-gray-600\">\r\n          Discover what you can afford based on your real financial data. \r\n          Powered by Capital One's Nessie API.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-8\">\r\n        {affordabilityData && (\r\n          <AffordabilityCalculator\r\n            tiers={affordabilityData.tiers}\r\n            recommended={affordabilityData.recommended}\r\n            monthlyIncome={affordabilityData.bankingData.averageMonthlyIncome}\r\n            monthlyExpenses={affordabilityData.bankingData.averageMonthlyExpenses}\r\n          />\r\n        )}\r\n\r\n        <PaymentSimulator defaultCreditScore={720} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAIhD;IAEV,IAAA,kNAAS,EAAC;QACR,8BAA8B;QAC9B,MAAM,YAAY;YAChB,MAAM,OAAO,MAAM,IAAA,uKAAsB,EAAC,iBAAiB;YAC3D,qBAAqB;YACrB,WAAW;QACb;QACA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAMvC,8OAAC;gBAAI,WAAU;;oBACZ,mCACC,8OAAC,sLAAuB;wBACtB,OAAO,kBAAkB,KAAK;wBAC9B,aAAa,kBAAkB,WAAW;wBAC1C,eAAe,kBAAkB,WAAW,CAAC,oBAAoB;wBACjE,iBAAiB,kBAAkB,WAAW,CAAC,sBAAsB;;;;;;kCAIzE,8OAAC,+KAAgB;wBAAC,oBAAoB;;;;;;;;;;;;;;;;;;AAI9C","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nishi/DriveWise/DriveWise/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}